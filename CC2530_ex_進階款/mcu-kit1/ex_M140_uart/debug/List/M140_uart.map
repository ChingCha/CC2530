################################################################################
#                                                                              #
#      IAR Universal Linker V4.61L/W32                                         #
#                                                                              #
#           Link time     =  10/Nov/2010  15:10:16                             #
#           Target CPU    =  x51                                               #
#           List file     =  "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\List\M1 #
#                            40_uart.map"                                      #
#           Output file 1 =  "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Exe\M14 #
#                            0_uart.hex"                                       #
#                            Format: intel-extended                            #
#           Output file 2 =  "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Exe\M14 #
#                            0_uart.d51"                                       #
#                            Format: debug                                     #
#                            UBROF version 10.0.2                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  "-IC:\IAR Systems\Embedded Workbench for MCS-51 V #
#                            7.51\8051\CONFIG\"                                #
#                            -D_NR_OF_BANKS=0 -D_CODEBANK_END=0                #
#                            -D_CODEBANK_START=0                               #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\M14 #
#                            0.r51"                                            #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\bas #
#                            ic_rf.r51"                                        #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\bas #
#                            ic_rf_security.r51"                               #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\ex. #
#                            r51"                                              #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal #
#                            _adc.r51"                                         #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal #
#                            _board.r51"                                       #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal #
#                            _buzzer.r51"                                      #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal #
#                            _clock.r51"                                       #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal #
#                            _digio.r51"                                       #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal #
#                            _int.r51"                                         #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal #
#                            _keypad.r51"                                      #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal #
#                            _lcd.r51"                                         #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal #
#                            _led.r51"                                         #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal #
#                            _mcu.r51"                                         #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal #
#                            _rf.r51"                                          #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal #
#                            _rf_security.r51"                                 #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal #
#                            _rf_util.r51"                                     #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal #
#                            _uart.r51"                                        #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\uti #
#                            l.r51"                                            #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\uti #
#                            l_buffer.r51"                                     #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\uti #
#                            l_lcd.r51"                                        #
#                            -o                                                #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Exe\M14 #
#                            0_uart.d51"                                       #
#                            -l                                                #
#                            "D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex #
#                            _v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\List\M1 #
#                            40_uart.map"                                      #
#                            -xmsn                                             #
#                            "-IC:\IAR Systems\Embedded Workbench for MCS-51 V #
#                            7.51\8051\CONFIG\"                                #
#                            -f lnk51ew_cc2530b.xcl (-D_IDATA_END=0xFF         #
#                            -D_PDATA_START=0x1E00 -D_PDATA_END=0x1EFF         #
#                            -D_IXDATA_START=0x0001 -D_IXDATA_END=0x1EFF       #
#                            -D_XDATA_START=_IXDATA_START                      #
#                            -D_XDATA_END=_IXDATA_END -D_CODE_START=0x0000     #
#                            -D_CODE_END=0x7FFF -D_FIRST_BANK_ADDR=0x10000     #
#                            -M(CODE)[(_CODEBANK_START+_FIRST_BANK_ADDR)-(_COD #
#                            EBANK_END+_FIRST_BANK_ADDR)]*_NR_OF_BANKS+0x10000 #
#                            =0x8000                                           #
#                            -ww69=i -D_NEAR_CODE_END=_CODE_END                #
#                            -D?REGISTER_BANK=0 -D_REGISTER_BANK_START=0       #
#                            -D?PBANK_NUMBER=0x1E -D?PBANK=0x93                #
#                            -D_BREG_START=0x00 -D?VB=0x20                     #
#                            -D_FAR_DATA_NR_OF_BANKS=0x0E                      #
#                            -D_FAR_DATA_START=0x010001                        #
#                            -D_FAR_DATA_END=0xFFFFFF                          #
#                            -D_FAR_CODE_START=_CODE_START                     #
#                            -D_FAR_CODE_END=_CODE_END -f lnk_base.xcl         #
#                            (-Z(BIT)BREG=_BREG_START -Z(BIT)BIT_N=0-7F        #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)BDATA_Z,BDATA_N,BDATA_I=20-2F             #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=08-7F       #
#                            -Z(DATA)PSP,XSP=08-7F -Z(DATA)DOVERLAY=08-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=08-7F                #
#                            -U(IDATA)0-7F=(DATA)0-7F                          #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=08-_IDATA_END    #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#08-_IDATA_END   #
#                            -Z(IDATA)IOVERLAY=08-FF -Z(CODE)INTVEC=0          #
#                            -Z(CODE)CSTART=_CODE_START-_CODE_END              #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_CODE_START-_CODE_END         #
#                            -Z(CODE)HUGE_ID=_FAR_CODE_START-_FAR_CODE_END     #
#                            -Z(CODE)BANK_RELAYS,RCODE,DIFUNCT,CODE_C,CODE_N,N #
#                            EAR_CODE=_CODE_START-_CODE_END                    #
#                            -P(CODE)BANKED_CODE=_CODE_START-_CODE_END,[(_CODE #
#                            BANK_START+_FIRST_BANK_ADDR)-(_CODEBANK_END+_FIRS #
#                            T_BANK_ADDR)]*_NR_OF_BANKS+10000                  #
#                            -P(CODE)FAR_CODE_C,FAR_CODE_N,FAR_CODE=[_FAR_CODE #
#                            _START-_FAR_CODE_END]/10000                       #
#                            -P(CODE)HUGE_CODE_C=_FAR_CODE_START-_FAR_CODE_END #
#                            -Z(CODE)CHECKSUM#_CODE_END                        #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START                                      #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA_START-_P #
#                            DATA_END                                          #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA_START-_X #
#                            DATA_END                                          #
#                            -Z(XDATA)PDATA_Z,PDATA_I=_PDATA_START-_PDATA_END  #
#                            -P(XDATA)PDATA_N=_PDATA_START-_PDATA_END          #
#                            -Z(XDATA)IXDATA_Z,IXDATA_I=_IXDATA_START-_IXDATA_ #
#                            END                                               #
#                            -P(XDATA)IXDATA_N=_IXDATA_START-_IXDATA_END       #
#                            -Z(XDATA)XDATA_Z,XDATA_I=_XDATA_START-_XDATA_END  #
#                            -P(XDATA)XDATA_N=_XDATA_START-_XDATA_END          #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA_START #
#                            -_XDATA_END                                       #
#                            -Z(CONST)XDATA_ROM_C=_XDATA_START-_XDATA_END      #
#                            -Z(XDATA)FAR_Z=[_FAR_DATA_START-_FAR_DATA_END]/10 #
#                            000                                               #
#                            -Z(XDATA)FAR_I=[_FAR_DATA_START-_FAR_DATA_END]/10 #
#                            000                                               #
#                            -Z(CODE)FAR_ID=[_FAR_CODE_START-_FAR_CODE_END]/10 #
#                            000                                               #
#                            -Z(XDATA)FAR_HEAP+_FAR_HEAP_SIZE=[_FAR_DATA_START #
#                            -_FAR_DATA_END]/10000                             #
#                            -P(XDATA)FAR_N=[_FAR_DATA_START-_FAR_DATA_END]*_F #
#                            AR_DATA_NR_OF_BANKS+10000                         #
#                            -P(CONST)FAR_ROM_C=[_FAR_DATA_START-_FAR_DATA_END #
#                            ]*_FAR_DATA_NR_OF_BANKS+10000                     #
#                            -Z(XDATA)HUGE_Z,HUGE_I=_FAR_DATA_START-_FAR_DATA_ #
#                            END                                               #
#                            -P(XDATA)HUGE_N=_FAR_DATA_START-_FAR_DATA_END     #
#                            -Z(XDATA)HUGE_HEAP+_HUGE_HEAP_SIZE=_FAR_DATA_STAR #
#                            T-_FAR_DATA_END                                   #
#                            -Z(CONST)HUGE_ROM_C=_FAR_DATA_START-_FAR_DATA_END #
#                            -cx51) -D_BANK0_START=0x00000                     #
#                            -D_BANK0_END=0x07FFF -D_BANK1_START=0x18000       #
#                            -D_BANK1_END=0x1FFFF -D_BANK2_START=0x28000       #
#                            -D_BANK2_END=0x2FFFF -D_BANK3_START=0x38000       #
#                            -D_BANK3_END=0x3FFFF -D_BANK4_START=0x48000       #
#                            -D_BANK4_END=0x4FFFF -D_BANK5_START=0x58000       #
#                            -D_BANK5_END=0x5FFFF -D_BANK6_START=0x68000       #
#                            -D_BANK6_END=0x6FFFF -D_BANK7_START=0x78000       #
#                            -D_BANK7_END=0x7FFFF                              #
#                            -P(CODE)BANK0=_BANK0_START-_BANK0_END             #
#                            -P(CODE)BANK1=_BANK1_START-_BANK1_END             #
#                            -P(CODE)BANK2=_BANK2_START-_BANK2_END             #
#                            -P(CODE)BANK3=_BANK3_START-_BANK3_END             #
#                            -P(CODE)BANK4=_BANK4_START-_BANK4_END             #
#                            -P(CODE)BANK5=_BANK5_START-_BANK5_END             #
#                            -P(CODE)BANK6=_BANK6_START-_BANK6_END             #
#                            -P(CODE)BANK7=_BANK7_START-_BANK7_END             #
#                            -D_FLASH_LOCK_BITS_START=((_NR_OF_BANKS*_FIRST_BA #
#                            NK_ADDR)+0xFFF0)                                  #
#                            -D_FLASH_LOCK_BITS_END=((_NR_OF_BANKS*_FIRST_BANK #
#                            _ADDR)+0xFFFF)                                    #
#                            -Z(CODE)FLASH_LOCK_BITS=_FLASH_LOCK_BITS_START-_F #
#                            LASH_LOCK_BITS_END                                #
#                            -U(CODE)0x0000=(CODE)_FLASH_LOCK_BITS_START-_FLAS #
#                            H_LOCK_BITS_END)                                  #
#                            -D_NR_OF_VIRTUAL_REGISTERS=8                      #
#                            -e_medium_write=_formatted_write                  #
#                            -e_medium_read=_formatted_read -rt                #
#                            "-Ointel-extended=D:\R.D Dept\程式開發\TI CC2530  #
#                            example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_u #
#                            art\debug\Exe\M140_uart.hex"                      #
#                            -s __program_start                                #
#                            "C:\IAR Systems\Embedded Workbench for MCS-51 V7. #
#                            51\8051\LIB\CLIB\cl-pli-nlxd-1e16x01.r51"         #
#                            -D_IDATA_STACK_SIZE=0x40                          #
#                            -D_EXTENDED_STACK_START=0x00                      #
#                            -D_EXTENDED_STACK_SIZE=0x00                       #
#                            -D_PDATA_STACK_SIZE=0x80                          #
#                            -D_XDATA_STACK_SIZE=0x100                         #
#                            -D_XDATA_HEAP_SIZE=0xFF -D_FAR_HEAP_SIZE=0xFFF    #
#                            -D_HUGE_HEAP_SIZE=0xFFF                           #
#                                                                              #
#                           Copyright (C) 1987-2009 IAR Systems AB.            #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      000000D3  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __calling_convention     = xdata_reentrant
  __code_model             = near
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = disabled
  __location_for_constants = data
  __number_of_dptrs        = 1
  __rt_version             = 1



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _HUGE_HEAP_SIZE         00000FFF 
           _FAR_HEAP_SIZE          00000FFF 
           _XDATA_HEAP_SIZE        000000FF 
           _XDATA_STACK_SIZE       00000100 
           _PDATA_STACK_SIZE       00000080 
           _EXTENDED_STACK_SIZE    00000000 
           _EXTENDED_STACK_START   00000000 
           _IDATA_STACK_SIZE       00000040 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000008 
           _FLASH_LOCK_BITS_END    0000FFFF 
           _FLASH_LOCK_BITS_START
                                   0000FFF0 
           _BANK7_END              0007FFFF 
           _BANK7_START            00078000 
           _BANK6_END              0006FFFF 
           _BANK6_START            00068000 
           _BANK5_END              0005FFFF 
           _BANK5_START            00058000 
           _BANK4_END              0004FFFF 
           _BANK4_START            00048000 
           _BANK3_END              0003FFFF 
           _BANK3_START            00038000 
           _BANK2_END              0002FFFF 
           _BANK2_START            00028000 
           _BANK1_END              0001FFFF 
           _BANK1_START            00018000 
           _BANK0_END              00007FFF 
           _BANK0_START            00000000 
           _FAR_CODE_END           00007FFF 
           _FAR_CODE_START         00000000 
           _FAR_DATA_END           00FFFFFF 
           _FAR_DATA_START         00010001 
           _FAR_DATA_NR_OF_BANKS   0000000E 
           ?VB                     00000020        ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
           _BREG_START             00000000 
           ?PBANK                  00000093 
           ?PBANK_NUMBER           0000001E 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _NEAR_CODE_END          00007FFF 
           _FIRST_BANK_ADDR        00010000 
           _CODE_END               00007FFF 
           _CODE_START             00000000 
           _XDATA_END              00001EFF 
           _XDATA_START            00000001 
           _IXDATA_END             00001EFF 
           _IXDATA_START           00000001 
           _PDATA_END              00001EFF 
           _PDATA_START            00001E00 
           _IDATA_END              000000FF 
           _CODEBANK_START         00000000 
           _CODEBANK_END           00000000 
           _NR_OF_BANKS            00000000 
    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\M140.r51
  PROGRAM MODULE, NAME : M140

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000080 - 00000080 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   ADT7301_Read
                                                   ADT7301_Start
                                                   M140_Init
                                                   M140_SpiRW
                                                   halBoardInit (hal_board)
                                                   lcdControl (hal_lcd)
                                                   lcdWrite (hal_lcd)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P0                   00000080 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008F - 0000008F (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   M140_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0INP                   0000008F 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F3 - 000000F3 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   M140_Init
                                                   halBoardInit (hal_board)
                                                   halUartInit (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0SEL                   000000F3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F7 - 000000F7 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   M140_Init
                                                   halBoardInit (hal_board)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2INP                   000000F7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FD - 000000FD (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   M140_Init
                                                   halBoardInit (hal_board)
                                                   halLcdInit (hal_lcd)
                                                   lcdControl (hal_lcd)
                                                   lcdWrite (hal_lcd)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   000000FD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000101 - 00000102 (0x2 bytes), align: 0
  Segment part 11.            Intra module refs:   ADT7301_Read
                                                   M140_GetValue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           M140_Value              00000101 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000043F - 00000466 (0x28 bytes), align: 0
  Segment part 12.            Intra module refs:   ADT7301_Read
                                                   ADT7301_Start
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           M140_SpiRW              0000043F 
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000467 - 00000475 (0xf bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADT7301_Start           00000467 
               calls direct
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000476 - 000004A6 (0x31 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADT7301_Read            00000476 
               calls direct
               XSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000004A7 - 000004CE (0x28 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           M140_Init               000004A7        main (ex)
               calls direct
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000004CF - 000004DC (0xe bytes), align: 0
  Segment part 16.            Intra module refs:   M140_GetValue
                                                   M140_Init
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000004CF 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000004DD - 000004F0 (0x14 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           M140_GetValue           000004DD        main (ex)
               calls direct
               ISTACK = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\basic_rf.r51
    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\basic_rf_security.r51
    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\ex.r51
  PROGRAM MODULE, NAME : ex

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 000004F1 - 00000679 (0x189 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    000004F1        ?call_main (?cmain)
               calls direct
               XSTACK = 00000000 ( 00000014 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000067A - 00000683 (0xa bytes), align: 0
  Segment part 11.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            0000067A 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000E5 - 000000F5 (0x11 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 000000F6 - 00000106 (0x11 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000246 - 00000256 (0x11 bytes), align: 0
  Segment part 6.             Intra module refs:   main
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000257 - 00000267 (0x11 bytes), align: 0
  Segment part 8.             Intra module refs:   main

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal_adc.r51
  PROGRAM MODULE, NAME : hal_adc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000088 - 00000088 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCON                 00000088 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B6 - 000000B6 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON3                 000000B6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BA - 000000BA (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCL                    000000BA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BB - 000000BB (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCH                    000000BB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   halUartInit (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCFG                  000000F2 

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal_board.r51
  PROGRAM MODULE, NAME : hal_board

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   halBoardInit
                                                   halLedSet (hal_led)
                                                   lcdControl (hal_lcd)
                                                   lcdWrite (hal_lcd)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P1                   00000090 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A0 - 000000A0 (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   halBoardInit
                                                   halKeypadI2cAck (hal_keypad)
                                                   halKeypadI2cStart (hal_keypad)
                                                   halKeypadI2cStop (hal_keypad)
                                                   halKeypadI2cWrite (hal_keypad)
                                                   halLcdInit (hal_lcd)
                                                   lcdControl (hal_lcd)
                                                   lcdWrite (hal_lcd)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_P2                   000000A0 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F4 - 000000F4 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   halBoardInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1SEL                   000000F4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F5 - 000000F5 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   halBoardInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2SEL                   000000F5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FE - 000000FE (0x1 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   halBoardInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   000000FE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FF - 000000FF (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   halBoardInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   000000FF 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000103 - 00000103 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   halBoardInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pLedData                00000103        ?Subroutine0 (hal_led)
                                                   ?Subroutine2 (hal_lcd)
                                                   halLedSet (hal_led)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000684 - 000006D5 (0x52 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halBoardInit            00000684        main (ex)
               calls direct
               ISTACK = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal_buzzer.r51
  PROGRAM MODULE, NAME : hal_buzzer

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 000006D6 - 000006D6 (0x1 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halBuzzer               000006D6        main (ex)

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal_clock.r51
  PROGRAM MODULE, NAME : hal_clock

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000009D - 0000009D (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   clockSetMainSrc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPSTA                0000009D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009E - 0000009E (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   clockSetMainSrc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONSTA               0000009E 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BE - 000000BE (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   clockSetMainSrc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLEEPCMD                000000BE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   clockSetMainSrc
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCONCMD               000000C6 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000006D7 - 0000070A (0x34 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clockSetMainSrc         000006D7        halMcuInit (hal_mcu)

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal_digio.r51
  PROGRAM MODULE, NAME : hal_digio

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000089 - 00000089 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   port0_ISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IFG                   00000089 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008A - 0000008A (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   port1_ISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IFG                   0000008A 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008B - 0000008B (0x1 bytes), align: 0
  Segment part 4. ROOT.       Intra module refs:   port2_ISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IFG                   0000008B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008C - 0000008C (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PICTL                   0000008C 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000008D - 0000008D (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1IEN                   0000008D 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009A - 0000009A (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   halUart0TxIsr (hal_uart)
                                                   halUartWrite (hal_uart)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IEN2                    0000009A 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A8 - 000000A8 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   halIntOn (hal_int)
                                                   halUartInit (hal_uart)
                                                   rfIsr (hal_rf)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN0                 000000A8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AB - 000000AB (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0IEN                   000000AB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000AC - 000000AC (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2IEN                   000000AC 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B8 - 000000B8 (0x1 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IEN1                 000000B8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C0 - 000000C0 (0x1 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   port0_ISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON                000000C0 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E8 - 000000E8 (0x1 bytes), align: 0
  Segment part 15. ROOT.      Intra module refs:   halUart0TxIsr (hal_uart)
                                                   port1_ISR
                                                   port2_ISR
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IRCON2               000000E8 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000104 - 00000113 (0x10 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 48
           LOCAL                   ADDRESS         
           =====                   =======         
           port0_isr_tbl           00000104 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000114 - 00000123 (0x10 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 51
           LOCAL                   ADDRESS         
           =====                   =======         
           port1_isr_tbl           00000114 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000124 - 0000012D (0xa bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 55
           LOCAL                   ADDRESS         
           =====                   =======         
           port2_isr_tbl           00000124 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000070B - 00000755 (0x4b bytes), align: 0
  Segment part 45.            Intra module refs:   port0_ISR::??INTVEC 107
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           port0_ISR               0000070B 
               interrupt function
               ISTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000756 - 0000075A (0x5 bytes), align: 0
  Segment part 46.            Intra module refs:   port0_ISR
                                                   port1_ISR
                                                   port2_ISR
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00000756 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000075B - 0000075B (0x1 bytes), align: 0
  Segment part 47.            Intra module refs:   port0_ISR
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            0000075B 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000075C - 00000763 (0x8 bytes), align: 0
  Segment part 48.            Intra module refs:   ?Subroutine2
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000764 - 000007B0 (0x4d bytes), align: 0
  Segment part 49.            Intra module refs:   port1_ISR::??INTVEC 123
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           port1_ISR               00000764 
               interrupt function
               ISTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000007B1 - 000007B1 (0x1 bytes), align: 0
  Segment part 50.            Intra module refs:   port1_ISR
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            000007B1 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000007B2 - 000007B9 (0x8 bytes), align: 0
  Segment part 51.            Intra module refs:   ?Subroutine3
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000007BA - 000007C4 (0xb bytes), align: 0
  Segment part 52.            Intra module refs:   port0_ISR
                                                   port1_ISR
                                                   port2_ISR
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            000007BA 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000007C5 - 00000812 (0x4e bytes), align: 0
  Segment part 53.            Intra module refs:   port2_ISR::??INTVEC 51
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           port2_ISR               000007C5 
               interrupt function
               ISTACK = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000813 - 00000813 (0x1 bytes), align: 0
  Segment part 54.            Intra module refs:   port2_ISR
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00000813 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000814 - 0000081B (0x8 bytes), align: 0
  Segment part 55.            Intra module refs:   ?Subroutine4
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000035 (0x36 bytes), align: 0
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           port2_ISR::??INTVEC 51
                                   00000033 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000006D (0x6e bytes), align: 0
  Segment part 23. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           port0_ISR::??INTVEC 107
                                   0000006B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000007D (0x7e bytes), align: 0
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           port1_ISR::??INTVEC 123
                                   0000007B 

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal_int.r51
  PROGRAM MODULE, NAME : hal_int

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 0000081C - 0000081E (0x3 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halIntOn                0000081C        halBoardInit (hal_board)

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal_keypad.r51
  PROGRAM MODULE, NAME : hal_keypad

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 0000081F - 0000082F (0x11 bytes), align: 0
  Segment part 11.            Intra module refs:   ?Subroutine0
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeypadI2cStart       0000081F 
               calls direct
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000830 - 00000843 (0x14 bytes), align: 0
  Segment part 12.            Intra module refs:   halKeypadWriteRegister
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeypadI2cStop        00000830 
               calls direct
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000844 - 0000084B (0x8 bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine6
                                                   halKeypadI2cStop
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine7            00000844 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000084C - 00000851 (0x6 bytes), align: 0
  Segment part 14.            Intra module refs:   ?Subroutine5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeypadI2cAck         0000084C 
               calls direct
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000852 - 00000853 (0x2 bytes), align: 0
  Segment part 16.            Intra module refs:   halKeypadI2cAck
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00000852 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000854 - 00000857 (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   ?Subroutine3
                                                   halKeypadI2cStart
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000858 - 00000862 (0xb bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine2
                                                   Segment part 17
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            00000858 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000863 - 00000882 (0x20 bytes), align: 0
  Segment part 19.            Intra module refs:   ?Subroutine5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeypadI2cWrite       00000863 
               calls direct
               XSTACK = 00000008 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000883 - 00000888 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   halKeypadI2cWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00000883 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000889 - 0000089C (0x14 bytes), align: 0
  Segment part 22.            Intra module refs:   halKeypadInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeypadWriteRegister
                                   00000889 
               calls direct
               XSTACK = 00000009 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000089D - 000008A1 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   halKeypadI2cWrite
                                                   halKeypadWriteRegister
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine8            0000089D 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000008A2 - 000008B4 (0x13 bytes), align: 0
  Segment part 25.            Intra module refs:   halKeypadWriteRegister
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            000008A2 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000008B5 - 000008B8 (0x4 bytes), align: 0
  Segment part 27.            Intra module refs:   halKeypadWriteRegister
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000008B5 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000008B9 - 000008BF (0x7 bytes), align: 0
  Segment part 28.            Intra module refs:   ?Subroutine0
                                                   ?Subroutine4
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            000008B9 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000008C0 - 000008F1 (0x32 bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halKeypadInit           000008C0        halBoardInit (hal_board)
               calls direct

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal_lcd.r51
  PROGRAM MODULE, NAME : hal_lcd

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000012E - 0000013D (0x10 bytes), align: 0
  Segment part 10.            Intra module refs:   ?Subroutine14
                                                   halLcdWriteLine
           LOCAL                   ADDRESS         
           =====                   =======         
           pLcdLineBuffer          0000012E 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000008F2 - 000008FA (0x9 bytes), align: 0
  Segment part 13.            Intra module refs:   ?Subroutine13
                                                   halLcdClear
                                                   halLcdInit
                                                   halLcdWriteChar
                                                   lcdWriteLine
           LOCAL                   ADDRESS         
           =====                   =======         
           lcdControl              000008F2 
               calls direct
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000008FB - 000008FF (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   lcdControl
                                                   lcdWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine22           000008FB 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000900 - 00000906 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   lcdWriteLine
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine19           00000900 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000907 - 0000090B (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   ?Subroutine19
                                                   ?Subroutine22
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000090C - 00000916 (0xb bytes), align: 0
  Segment part 17.            Intra module refs:   halLcdClear
                                                   halLcdWriteChar
                                                   lcdWriteMany
           LOCAL                   ADDRESS         
           =====                   =======         
           lcdWrite                0000090C 
               calls direct
               XSTACK = 00000008 ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000917 - 00000931 (0x1b bytes), align: 0
  Segment part 18.            Intra module refs:   ?Subroutine22
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00000917 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000932 - 00000948 (0x17 bytes), align: 0
  Segment part 19.            Intra module refs:   ?Subroutine19
           LOCAL                   ADDRESS         
           =====                   =======         
           lcdWriteMany            00000932 
               calls direct
               XSTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000949 - 0000094D (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   lcdWriteMany
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine20           00000949 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000094E - 00000967 (0x1a bytes), align: 0
  Segment part 21.            Intra module refs:   halLcdWriteLine
           LOCAL                   ADDRESS         
           =====                   =======         
           lcdWriteLine            0000094E 
               calls direct
               XSTACK = 0000000F ( 00000000 )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000968 - 00000999 (0x32 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halLcdInit              00000968        halBoardInit (hal_board)
               calls direct
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000099A - 0000099B (0x2 bytes), align: 0
  Segment part 23.            Intra module refs:   halLcdInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            0000099A 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000099C - 0000099F (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   ?Subroutine4
                                                   halLcdInit
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000009A0 - 000009AA (0xb bytes), align: 0
  Segment part 25.            Intra module refs:   halLcdInit
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            000009A0 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000009AB - 000009B5 (0xb bytes), align: 0
  Segment part 26.            Intra module refs:   ?Subroutine3
                                                   Segment part 24
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine13           000009AB 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000009B6 - 000009DC (0x27 bytes), align: 0
  Segment part 28.            Intra module refs:   halLcdInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halLcdClear             000009B6 
               calls direct
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000009DD - 000009FD (0x21 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halLcdWriteChar         000009DD        main (ex)
               calls direct
               XSTACK = 0000000B ( 00000000 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000009FE - 00000A3E (0x41 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halLcdWriteLine         000009FE        main (ex)
                                                   utilPrintLogo (util_lcd)
               calls direct
               XSTACK = 00000008 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000A3F - 00000A42 (0x4 bytes), align: 0
  Segment part 37.            Intra module refs:   halLcdWriteLine
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000A43 - 00000A4E (0xc bytes), align: 0
  Segment part 38.            Intra module refs:   Segment part 37
                                                   Segment part 40
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine14           00000A43 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000A4F - 00000A55 (0x7 bytes), align: 0
  Segment part 40.            Intra module refs:   halLcdWriteLine

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal_led.r51
  PROGRAM MODULE, NAME : hal_led

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 00000A56 - 00000AB0 (0x5b bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halLedSet               00000A56        main (ex)
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000AB1 - 00000ABB (0xb bytes), align: 0
  Segment part 8.             Intra module refs:   halLedSet
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00000AB1 

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal_mcu.r51
  PROGRAM MODULE, NAME : hal_mcu

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000C9 - 000000C9 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDCTL                   000000C9 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000ABC - 00000AC1 (0x6 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halMcuInit              00000ABC        halBoardInit (hal_board)
               calls direct
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000AC2 - 00000AF1 (0x30 bytes), align: 0
  Segment part 10.            Intra module refs:   halMcuWaitMs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halMcuWaitUs            00000AC2        ?Subroutine2 (hal_lcd)
                                                   ?Subroutine6 (hal_keypad)
                                                   ?Subroutine7 (hal_keypad)
                                                   halKeypadI2cStart (hal_keypad)
                                                   halKeypadI2cStop (hal_keypad)
               XSTACK = 00000008 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000AF2 - 00000B1E (0x2d bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halMcuWaitMs            00000AF2        ?Subroutine0 (M140)
                                                   ?Subroutine13 (hal_lcd)
                                                   ?Subroutine3 (hal_lcd)
                                                   main (ex)
               calls direct
               XSTACK = 00000000 ( 00000008 )

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal_rf.r51
  PROGRAM MODULE, NAME : hal_rf

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000091 - 00000091 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF1                 00000091 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 0000009B - 0000009B (0x1 bytes), align: 0
  Segment part 3. ROOT.       Intra module refs:   rfIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           S1CON                   0000009B 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D9 - 000000D9 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFD                     000000D9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E1 - 000000E1 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFST                    000000E1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E9 - 000000E9 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   rfIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RFIRQF0                 000000E9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000013E - 0000013F (0x2 bytes), align: 0
  Segment part 24.            Intra module refs:   rfIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           pfISR                   0000013E 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000B1F - 00000B28 (0xa bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halRfGetChipId          00000B1F        utilPrintLogo (util_lcd)
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000B29 - 00000B35 (0xd bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halRfGetChipVer         00000B29        utilPrintLogo (util_lcd)
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000B36 - 00000B36 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   halRfGetChipId
                                                   halRfGetChipVer
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00000B36 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000B37 - 00000B3B (0x5 bytes), align: 0
  Segment part 33.            Intra module refs:   ?Subroutine1
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000B3C - 00000B78 (0x3d bytes), align: 0
  Segment part 49.            Intra module refs:   rfIsr::??INTVEC 131
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rfIsr                   00000B3C 
               interrupt function
               ISTACK = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000085 (0x86 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rfIsr::??INTVEC 131     00000083 

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal_rf_security.r51
  PROGRAM MODULE, NAME : hal_rf_security

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B1 - 000000B1 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCDI                   000000B1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B2 - 000000B2 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCDO                   000000B2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B3 - 000000B3 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ENCCS                   000000B3 

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal_rf_util.r51
    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\hal_uart.r51
  PROGRAM MODULE, NAME : hal_uart

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000086 - 00000086 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   halUartInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0CSR                   00000086 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000095 - 00000095 (0x1 bytes), align: 0
  Segment part 2. ROOT.       Intra module refs:   halUart0RxIsr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ST0                     00000095 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C1 - 000000C1 (0x1 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   halUart0RxIsr
                                                   halUart0TxIsr
                                                   halUartInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0DBUF                  000000C1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C2 - 000000C2 (0x1 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   halUartInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0BAUD                  000000C2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C4 - 000000C4 (0x1 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   halUartInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0UCR                   000000C4 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C5 - 000000C5 (0x1 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   halUartInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           U0GCR                   000000C5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F1 - 000000F1 (0x1 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   halUartInit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCFG                  000000F1 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000140 - 00000245 (0x106 bytes), align: 0
  Segment part 20.            Intra module refs:   ?Subroutine1
                                                   ?Subroutine2
                                                   halUart0RxIsr
                                                   halUart0TxIsr
                                                   halUartInit
                                                   halUartRead
                                                   halUartRxLen
                                                   halUartWrite
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           uartCfg                 00000140 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000B79 - 00000BB9 (0x41 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUartInit             00000B79        halBoardInit (hal_board)
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000BBA - 00000BBE (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   halUartInit
                                                   halUartRxLen
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            00000BBA 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000BBF - 00000C06 (0x48 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUartRead             00000BBF        main (ex)
               XSTACK = 00000000 ( 00000008 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000C07 - 00000C0B (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   halUartRead
                                                   halUartWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            00000C07 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000C0C - 00000C9F (0x94 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUartWrite            00000C0C        main (ex)
               XSTACK = 00000000 ( 00000008 )
               ISTACK = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000CA0 - 00000CAA (0xb bytes), align: 0
  Segment part 26.            Intra module refs:   halUartRead
                                                   halUartWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00000CA0 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000CAB - 00000CE2 (0x38 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUartRxLen            00000CAB        main (ex)
               ISTACK = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000CE3 - 00000D2C (0x4a bytes), align: 0
  Segment part 30.            Intra module refs:   halUart0RxIsr::??INTVEC 19
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUart0RxIsr           00000CE3 
               interrupt function
               ISTACK = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000D2D - 00000D31 (0x5 bytes), align: 0
  Segment part 31.            Intra module refs:   halUart0RxIsr
                                                   halUart0TxIsr
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            00000D2D 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000D32 - 00000D3C (0xb bytes), align: 0
  Segment part 32.            Intra module refs:   halUart0RxIsr
                                                   halUartRead
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00000D32 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000D3D - 00000D8E (0x52 bytes), align: 0
  Segment part 33.            Intra module refs:   halUart0TxIsr::??INTVEC 59
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUart0TxIsr           00000D3D 
               interrupt function
               ISTACK = 00000000 ( 00000007 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000D8F - 00000D98 (0xa bytes), align: 0
  Segment part 34.            Intra module refs:   halUart0TxIsr
                                                   halUartWrite
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00000D8F 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000015 (0x16 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUart0RxIsr::??INTVEC 19
                                   00000013 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000003D (0x3e bytes), align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           halUart0TxIsr::??INTVEC 59
                                   0000003B 

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\util.r51
  PROGRAM MODULE, NAME : util

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 00000D99 - 00000E07 (0x6f bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           utilChipIdToStr         00000D99        utilPrintLogo (util_lcd)
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000107 - 0000010B (0x5 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000010C - 00000110 (0x5 bytes), align: 0
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000111 - 00000115 (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 10
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000116 - 0000011A (0x5 bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000011B - 0000011F (0x5 bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000120 - 00000124 (0x5 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 16
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000125 - 00000129 (0x5 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 18
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000012A - 0000012E (0x5 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 20
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000012F - 00000133 (0x5 bytes), align: 0
  Segment part 23.            Intra module refs:   Segment part 22
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000134 - 00000138 (0x5 bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 24
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00000139 - 0000013D (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 26
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000268 - 0000026C (0x5 bytes), align: 0
  Segment part 6.             Intra module refs:   utilChipIdToStr
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000026D - 00000271 (0x5 bytes), align: 0
  Segment part 8.             Intra module refs:   utilChipIdToStr
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000272 - 00000276 (0x5 bytes), align: 0
  Segment part 10.            Intra module refs:   utilChipIdToStr
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000277 - 0000027B (0x5 bytes), align: 0
  Segment part 12.            Intra module refs:   utilChipIdToStr
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000027C - 00000280 (0x5 bytes), align: 0
  Segment part 14.            Intra module refs:   utilChipIdToStr
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000281 - 00000285 (0x5 bytes), align: 0
  Segment part 16.            Intra module refs:   utilChipIdToStr
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000286 - 0000028A (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   utilChipIdToStr
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000028B - 0000028F (0x5 bytes), align: 0
  Segment part 20.            Intra module refs:   utilChipIdToStr
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000290 - 00000294 (0x5 bytes), align: 0
  Segment part 22.            Intra module refs:   utilChipIdToStr
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 00000295 - 00000299 (0x5 bytes), align: 0
  Segment part 24.            Intra module refs:   utilChipIdToStr
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000029A - 0000029E (0x5 bytes), align: 0
  Segment part 26.            Intra module refs:   utilChipIdToStr

    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\util_buffer.r51
    *************************************************************************

  FILE NAME : D:\R.D Dept\程式開發\TI CC2530 example\CC2530_ex_v5\CC2530_ex\mcu-kit1\ex_M140_uart\debug\Obj\util_lcd.r51
  PROGRAM MODULE, NAME : util_lcd

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 00000E08 - 00000E7C (0x75 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           utilPrintLogo           00000E08        main (ex)
               calls direct
               XSTACK = 00000000 ( 0000001F )
               ISTACK = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00000E7D - 00000E81 (0x5 bytes), align: 0
  Segment part 11.            Intra module refs:   utilPrintLogo
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00000E7D 
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 0000013E - 00000151 (0x14 bytes), align: 0
  Segment part 7.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 0000029F - 000002B2 (0x14 bytes), align: 0
  Segment part 6.             Intra module refs:   utilPrintLogo

    *************************************************************************

  FILE NAME : C:\IAR Systems\Embedded Workbench for MCS-51 V7.51\8051\LIB\CLIB\cl-pli-nlxd-1e16x01.r51
  LIBRARY MODULE, NAME : ?cexit

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 00000086 - 0000008A (0x5 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    00000086        ?call_main (?cmain)
           ?C_EXIT                 00000086 
           ?ROM_MONITOR_NOPS       00000086 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 0000008B, align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  0000008B        Segment part 12 (CSTARTUP)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000008B - 00000093 (0x9 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init_call   0000008B        __low_level_init (?low_level_init)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00000094 - 000000A3 (0x10 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          00000094        M140_Value (M140)
                                                   pLcdLineBuffer (hal_lcd)
                                                   pLedData (hal_board)
                                                   pfISR (hal_rf)
                                                   port0_isr_tbl (hal_digio)
                                                   port1_isr_tbl (hal_digio)
                                                   port2_isr_tbl (hal_digio)
                                                   uartCfg (hal_uart)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000A4 - 000000CC (0x29 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          000000A4        Segment part 10 (util)
                                                   Segment part 12 (util)
                                                   Segment part 14 (util)
                                                   Segment part 16 (util)
                                                   Segment part 18 (util)
                                                   Segment part 20 (util)
                                                   Segment part 22 (util)
                                                   Segment part 24 (util)
                                                   Segment part 26 (util)
                                                   Segment part 6 (ex)
                                                   Segment part 6 (util)
                                                   Segment part 6 (util_lcd)
                                                   Segment part 8 (ex)
                                                   Segment part 8 (util)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000CD, align: 0
  Segment part 32.            Intra module refs:   __low_level_init_call
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000CD - 000000D2 (0x6 bytes), align: 0
  Segment part 33.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              000000CD 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 000000C0, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           000000C0 
    -------------------------------------------------------------------------
XSTACK
  Relative segment, address: XDATA 00000001, align: 0
  Segment part 3.             Intra module refs:   ?RESET_XSP
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_START           00000001 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 00000002 (0x3 bytes), align: 0
  Segment part 5. ROOT.       Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000D3 - 000000D8 (0x6 bytes), align: 0
  Segment part 6. ROOT.       Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         000000D3        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_SP               000000D6 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000D9 - 000000DE (0x6 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_XSP              000000D9        ?XSP (VIRTUAL_REGISTERS)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000000DF - 000000E1 (0x3 bytes), align: 0
  Segment part 12.            Intra module refs:   Absolute parts

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000008, align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000008        ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?Subroutine14 (hal_lcd)
                                                   halLcdWriteLine (hal_lcd)
                                                   halUart0TxIsr (hal_uart)
                                                   main (ex)
                                                   port0_ISR (hal_digio)
                                                   port1_ISR (hal_digio)
                                                   port2_ISR (hal_digio)
                                                   strncpy (?strncpy)
                                                   utilPrintLogo (util_lcd)
    -------------------------------------------------------------------------
XSP
  Relative segment, address: DATA 00000010 - 00000011 (0x2 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSP                    00000010        ?ADD_XSTACK_DISP0_8 (?ADD_XSTACK_DISP8)
                                                   ?ALLOC_XSTACK8 (?ALLOC_XSTACK8)
                                                   ?DEALLOC_XSTACK8 (?DEALLOC_XSTACK8)
                                                   ?FUNC_ENTER_XDATA (?FUNC_ENTER_XDATA)
                                                   ?FUNC_LEAVE_XDATA (?FUNC_LEAVE_XDATA)
                                                   ?INTERRUPT_ENTER_XSP (?INTERRUPT_ENTER_XSP)
                                                   ?INTERRUPT_LEAVE_XSP (?INTERRUPT_LEAVE_XSP)
                                                   ?RESET_XSP (CSTARTUP)
                                                   ?XSTACK_DISP0_8 (?XSTACK_DISP8)
                                                   main (ex)
                                                   utilPrintLogo (util_lcd)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_IDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000152 - 0000015E (0xd bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_IDATA
                                   00000152        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000015F - 0000017F (0x21 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_XDATA
                                   0000015F        utilPrintLogo (util_lcd)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_DIV_MOD

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000180 - 000001D8 (0x59 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIV_MOD             00000180        main (ex)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_SHR

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001D9 - 000001DB (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_SHR                 000001D9        main (ex)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001DC - 000001E7 (0xc bytes), align: 0
  Segment part 2.             Intra module refs:   ?US_SHR

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001E8 - 000001EA (0x3 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL                  000001E8        port0_ISR (hal_digio)
                                                   port1_ISR (hal_digio)
                                                   port2_ISR (hal_digio)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001EB - 000001ED (0x3 bytes), align: 0
  Segment part 1.             Intra module refs:   Segment part 2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_REW              000001EB 
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000001EE - 000001FA (0xd bytes), align: 0
  Segment part 2.             Intra module refs:   ?S_SHL
                                                   ?S_SHL_REW

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000001FB - 00000210 (0x16 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ALLOC_XSTACK8          000001FB        main (ex)
                                                   utilPrintLogo (util_lcd)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DEALLOC_XSTACK8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000211 - 0000022A (0x1a bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DEALLOC_XSTACK8        00000211        utilPrintLogo (util_lcd)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ADD_XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000022B - 00000245 (0x1b bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ADD_XSTACK_DISP0_8     0000022B        ?PUSH_XSTACK_I (?PUSH_XSTACK_I)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?XSTACK_DISP8

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000246 - 0000024F (0xa bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?XSTACK_DISP0_8         00000246        main (ex)
                                                   strncpy (?strncpy)
                                                   utilPrintLogo (util_lcd)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?CALL_IND

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000250 - 00000251 (0x2 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?CALL_IND               00000250        port0_ISR (hal_digio)
                                                   port1_ISR (hal_digio)
                                                   port2_ISR (hal_digio)
                                                   rfIsr (hal_rf)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_ENTER_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000252 - 000002B1 (0x60 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_ENTER_XDATA       00000252        ADT7301_Read (M140)
                                                   halKeypadI2cWrite (hal_keypad)
                                                   halKeypadWriteRegister (hal_keypad)
                                                   halLcdWriteLine (hal_lcd)
                                                   halMcuWaitMs (hal_mcu)
                                                   halUartRead (hal_uart)
                                                   halUartWrite (hal_uart)
                                                   lcdWriteMany (hal_lcd)
                                                   strncpy (?strncpy)
                                                   utilPrintLogo (util_lcd)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FUNC_LEAVE_XDATA

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000002B2 - 000002E9 (0x38 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?FUNC_LEAVE_XDATA       000002B2        ?Subroutine1 (util_lcd)
                                                   ?Subroutine20 (hal_lcd)
                                                   ?Subroutine4 (hal_uart)
                                                   ?Subroutine8 (hal_keypad)
                                                   ADT7301_Read (M140)
                                                   halLcdWriteLine (hal_lcd)
                                                   halMcuWaitMs (hal_mcu)
                                                   strncpy (?strncpy)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_ENTER_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000002EA - 00000348 (0x5f bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_ENTER_XSP    000002EA        port0_ISR (hal_digio)
                                                   port1_ISR (hal_digio)
                                                   port2_ISR (hal_digio)
                                                   rfIsr (hal_rf)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?INTERRUPT_LEAVE_XSP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000349 - 00000398 (0x50 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?INTERRUPT_LEAVE_XSP    00000349        ?Subroutine6 (hal_digio)
                                                   rfIsr (hal_rf)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PUSH_XSTACK_I

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000399 - 0000039C (0x4 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I_TWO      00000399        utilPrintLogo (util_lcd)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 0000039D - 000003A9 (0xd bytes), align: 0
  Segment part 4.             Intra module refs:   ?PUSH_XSTACK_I_TWO
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PUSH_XSTACK_I          0000039D 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_DENSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000003AA - 000003AF (0x6 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_DENSE        000003AA        halLedSet (hal_led)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000003B0 - 000003DE (0x2f bytes), align: 0
  Segment part 2.             Intra module refs:   ?UC_SWITCH_DENSE
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000003DF - 000003DF (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   ?UC_SWITCH_DENSE

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_SWITCH_SPARSE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 000003E0 - 000003E6 (0x7 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_SPARSE       000003E0        utilChipIdToStr (util)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 000003E7 - 00000408 (0x22 bytes), align: 0
  Segment part 2.             Intra module refs:   ?UC_SWITCH_SPARSE
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_SWITCH_SPARSE_LEAVE
                                   000003FD        ?UC_JMP_IF_IN_RANGE (?UC_JMP_IF_IN_RANGE)
                                                   ?UC_JMP_IF_VALUE (?UC_JMP_IF_VALUE)
    -------------------------------------------------------------------------
RCODE
  Relative segment, address: CODE 00000409 - 00000409 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   ?UC_SWITCH_SPARSE

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_JMP_IF_IN_RANGE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 0000040A - 00000428 (0x1f bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_JMP_IF_IN_RANGE     0000040A        ?UC_SWITCH_SPARSE_LEAVE (?UC_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UC_JMP_IF_VALUE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00000429 - 0000043E (0x16 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UC_JMP_IF_VALUE        00000429        ?UC_SWITCH_SPARSE_LEAVE (?UC_SWITCH_SPARSE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strncpy

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 00000E82 - 00000EE8 (0x67 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strncpy                 00000E82        utilPrintLogo (util_lcd)
               XSTACK = 00000002 ( 00000009 )
               ISTACK = 00000000 ( 00000001 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 000000E2 - 000000E4 (0x3 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        000000E2        __low_level_init_call (?cmain)




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module                    CODE      DATA      XDATA  IDATA    BIT
------                    ----      ----      -----  -----    ---
                         (Rel)  (Rel)  (Abs)  (Rel)  (Rel)  (Rel)
?ADD_XSTACK_DISP8           27
?ALLOC_XSTACK8              22
?CALL_IND                    2
?DEALLOC_XSTACK8            26
?FUNC_ENTER_XDATA           96
?FUNC_LEAVE_XDATA           56
?INTERRUPT_ENTER_XSP        95
?INTERRUPT_LEAVE_XSP        80
?MOVE_LONG8_XDATA_IDATA     13
?MOVE_LONG8_XDATA_XDATA     33
?PUSH_XSTACK_I              17
?S_DIV_MOD                  89
?S_SHL                      19
?UC_JMP_IF_IN_RANGE         31
?UC_JMP_IF_VALUE            22
?UC_SWITCH_DENSE            54
?UC_SWITCH_SPARSE           42
?US_SHR                     15
?XSTACK_DISP8               10
?cexit                       5
?cmain                      72
?low_level_init              3
?strncpy                   103
CSTARTUP                    15
  + common                   3
M140                       178             1      2
  + shared                                 4
VIRTUAL_REGISTERS                   2                           8
ex                         437                   34
hal_adc                                    4
  + shared                                 1
hal_board                   82                    1
  + shared                                 6
hal_buzzer                   1
hal_clock                   52             4
hal_digio                  273             9     42
  + shared                 126             3
  + common
hal_int                      3
hal_keypad                 211
hal_lcd                    356                   16
hal_led                    102
hal_mcu                     99             1
hal_rf                      90             5      2
  + common                 134
hal_rf_security                            3
hal_uart                   544             7    262
  + common                  62
util                       166                   55
util_lcd                   142                   20
N/A (command line)                 16           256     64
N/A (alignment)
----------               -----     --     --    ---     --      -
Total:                   3 683     18     48    690     64      8
  + common                 134


                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000085          86   com    0
CSTART               CODE          00000086 - 000000E4          5F   rel    0
DATA_ID              CODE               000000E5                     dse    0
BDATA_ID             CODE               000000E5                     dse    0
BIT_ID               CODE               000000E5                     dse    0
IDATA_ID             CODE               000000E5                     dse    0
PDATA_ID             CODE               000000E5                     dse    0
IXDATA_ID            CODE               000000E5                     dse    0
XDATA_ID             CODE          000000E5 - 00000151          6D   rel    0
BANK_RELAYS          CODE               00000152                     dse    0
RCODE                CODE          00000152 - 0000043E         2ED   rel    0
DIFUNCT              CODE               0000043F                     dse    0
CODE_C               CODE               0000043F                     dse    0
CODE_N               CODE               0000043F                     dse    0
NEAR_CODE            CODE          0000043F - 00000EE8         AAA   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
VREG                 DATA          00000008 - 0000000F           8   rel    0
PSP                  DATA               00000010                     dse    0
XSP                  DATA          00000010 - 00000011           2   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
SFR_AN               DATA          00000080 - 00000080           1   rel    0
                     DATA          00000086 - 00000086           1 
                     DATA          00000088 - 0000008D           6 
                     DATA          0000008F - 00000091           3 
                     DATA          00000095 - 00000095           1 
                     DATA          0000009A - 0000009B           2 
                     DATA          0000009D - 0000009E           2 
                     DATA          000000A0 - 000000A0           1 
                     DATA          000000A8 - 000000A8           1 
                     DATA          000000AB - 000000AC           2 
                     DATA          000000B1 - 000000B3           3 
                     DATA          000000B6 - 000000B6           1 
                     DATA          000000B8 - 000000B8           1 
                     DATA          000000BA - 000000BB           2 
                     DATA          000000BE - 000000BE           1 
                     DATA          000000C0 - 000000C2           3 
                     DATA          000000C4 - 000000C6           3 
                     DATA          000000C9 - 000000C9           1 
                     DATA          000000D9 - 000000D9           1 
                     DATA          000000E1 - 000000E1           1 
                     DATA          000000E8 - 000000E9           2 
                     DATA          000000F1 - 000000F5           5 
                     DATA          000000F7 - 000000F7           1 
                     DATA          000000FD - 000000FF           3 
XSTACK               XDATA         00000001 - 00000100         100   rel    0
XDATA_Z              XDATA         00000101 - 00000245         145   rel    0
XDATA_I              XDATA         00000246 - 000002B2          6D   rel    0
ISTACK               IDATA         000000C0 - 000000FF          40   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 3 817 bytes of CODE  memory
    18 bytes of DATA  memory (+ 48 absolute )
   690 bytes of XDATA memory
    64 bytes of IDATA memory
     8 bits  of BIT   memory

Errors: none
Warnings: none

